name: Windows MSVC Build Reusable Workflow

on: 
  workflow_call:
  workflow_dispatch:

env:
  globalprefix: D:\a\FFmpeg\msvc\

jobs:
  build:
    runs-on: windows-2025

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Install Meson
      run: |
        python -m pip install --upgrade pip
        python -m pip install meson

    - name: Install ASM for Visual Studio
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://www.nasm.us/pub/nasm/releasebuilds/2.16.03/win64/nasm-2.16.03-win64.zip" -OutFile "NASM.zip"
        Invoke-WebRequest -Uri "https://github.com/ShiftMediaProject/VSNASM/releases/download/1.0/VSNASM.zip" -OutFile "VSNASM.zip"
        Expand-Archive -Path "NASM.zip" -DestinationPath ".\NASM" -Force
        Copy-Item -Path ".\NASM\nasm-2.16.03\nasm.exe" -Destination "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\nasm.exe"
        Expand-Archive -Path "VSNASM.zip" -DestinationPath ".\VSNASM" -Force
        cd VSNASM
        & ".\install_script.bat"

    - name: Set Environment Variable
      shell: cmd
      run: |
        echo PREFIX=%globalprefix% >> %GITHUB_ENV%
        echo CFLAGS=/O2 /GL /MT /D_WIN32_WINNT=0x0601 /I%globalprefix%\include >> %GITHUB_ENV%
        echo CXXFLAGS=/O2 /GL /MT /std:c++17 /I%globalprefix%\include >> %GITHUB_ENV%
        echo LDFLAGS=/LTCG /LIBPATH:%globalprefix%\lib >> %GITHUB_ENV%
        echo PKG_CONFIG_PATH=%globalprefix%\lib\pkgconfig >> %GITHUB_ENV%
        echo PATH=%globalprefix%\bin;%PATH% >> %GITHUB_ENV%
        echo MAKEFLAGS=/M >> %GITHUB_ENV%
        echo CC=cl >> %GITHUB_ENV%
        echo CXX=cl >> %GITHUB_ENV%

    - name: Build Dependencies
      shell: cmd
      run: |
        git clone https://github.com/ShiftMediaProject/x264.git
        cd x264/SMP
        msbuild libx264.vcxproj /p:Configuration=Release /p:Platform=x64 /p:WholeProgramOptimization=true

        cd ../..
        git clone https://bitbucket.org/multicoreware/x265_git.git x265
        cd x265/build
        cmake -G "Visual Studio 17 2022" ^
          -A x64 ^
          -DCMAKE_INSTALL_PREFIX=%PREFIX% ^
          -DENABLE_SHARED=OFF ^
          -DENABLE_CLI=OFF ^
          -DENABLE_TESTS=OFF ^
          -DENABLE_DOCS=OFF ^
          -DCMAKE_C_FLAGS_RELEASE="/O2 /GL /MT" ^
          -DCMAKE_CXX_FLAGS_RELEASE="/O2 /GL /MT /std:c++17" ^
          ../source
        msbuild x265.sln /p:Configuration=Release /p:Platform=x64 /p:WholeProgramOptimization=true

        cd ../..
        git clone https://code.videolan.org/videolan/dav1d.git
        cd dav1d
        meson setup build ^
          --buildtype=release ^
          --prefix=%PREFIX% ^
          -Ddefault_library=static ^
          -Denable_tools=false ^
          -Denable_tests=false ^
          -Dc_args="%CFLAGS%" ^
          -Dcpp_args="%CXXFLAGS%" ^
          -Dc_link_args="%LDFLAGS%" ^
          -Dcpp_link_args="%LDFLAGS%"
        meson compile -C build -j %NUMBER_OF_PROCESSORS%
        meson install -C build
